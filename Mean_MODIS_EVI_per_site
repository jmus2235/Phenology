/*
//NDVI
//load the image collection
//var modisNDVI = ee.ImageCollection('MODIS/MCD43A4_NDVI')
//var modisNDVI = ee.ImageCollection('LANDSAT/LC8_L1T_8DAY_NDVI')
var modisNDVI = ee.ImageCollection('MODIS/006/MOD13Q1') //MOD13Q1.006 Terra Vegetation Indices 16-Day Global 250m
    .filter(ee.Filter.dayOfYear(0, 365))
    .filterDate('2002-01-01', '2017-12-31')               
    .filterBounds(GUAN);                       
    
var series = ui.Chart.image.doySeriesByYear(
    modisNDVI, 'NDVI', GUAN, ee.Reducer.mean(), 250);
    
// Display the chart
print(series);

// explicitly calculate the mean, store as a feature collection with no geometry, and export

// get the mean value for the region from each image
var ts = modisNDVI.map(function(image){
   var date = image.get('system:time_start');
   var mean = image.reduceRegion({
     reducer: ee.Reducer.mean(),
     geometry: GUAN,
     scale: 250
   });
   // and return a feature with 'null' geometry with properties (dictionary)  
   return ee.Feature(null, {'mean': mean.get('NDVI'),
                            'date': date})
});

print(ts);

// Export a .csv table of date, mean NDVI for flight box
Export.table.toDrive({
  collection: ts,
  description: 'Mean_TERRA_NDVI_2002-2018_MOD13Q1_XXXX',
  folder: 'NDVI_Means',
  fileFormat: 'CSV'
});

//load the image collection
var modisNDVI = ee.ImageCollection('MODIS/006/MYD13Q1') //MYD13Q1.006 AQUA Vegetation Indices 16-Day Global 250m
    .filter(ee.Filter.dayOfYear(0, 365))
    .filterDate('2002-01-01', '2017-12-31')               
    .filterBounds(GUAN);                       
    
var series = ui.Chart.image.doySeriesByYear(
    modisNDVI, 'NDVI', GUAN, ee.Reducer.mean(), 250);
    
// Display the chart
print(series);

// explicitly calculate the mean, store as a feature collection with no geometry, and export

// get the mean value for the region from each image
var ts = modisNDVI.map(function(image){
   var date = image.get('system:time_start');
   var mean = image.reduceRegion({
     reducer: ee.Reducer.mean(),
     geometry: GUAN,
     scale: 250
   });
   // and return a feature with 'null' geometry with properties (dictionary)  
   return ee.Feature(null, {'mean': mean.get('NDVI'),
                            'date': date})
});

print(ts);

// Export a .csv table of date, mean NDVI for flight box
Export.table.toDrive({
  collection: ts,
  description: 'Mean_AQUA_NDVI_2002-2018_MYD13Q1_XXXX',
  folder: 'NDVI_Means',
  fileFormat: 'CSV'
});
*/

//EVI
//load the image collection
var modisEVI = ee.ImageCollection('MODIS/006/MOD13Q1') //MOD13Q1.006 Terra Vegetation Indices 16-Day Global 250m
    .filter(ee.Filter.dayOfYear(0, 365))
//    .filterDate('2002-01-01', '2017-12-31')               
    .filterDate('2019-01-01', '2019-12-31')
    .filterBounds(HARV);                       
    
var series = ui.Chart.image.doySeriesByYear(
    modisEVI, 'EVI', HARV, ee.Reducer.mean(), 250);
    
// Display the chart
print(series);

// explicitly calculate the mean, store as a feature collection with no geometry, and export

// get the mean value for the region from each image
var ts = modisEVI.map(function(image){
   var date = image.get('system:time_start');
   var mean = image.reduceRegion({
     reducer: ee.Reducer.mean(),
     geometry: HARV,
     scale: 250
   });
   // and return a feature with 'null' geometry with properties (dictionary)  
   return ee.Feature(null, {'mean': mean.get('EVI'),
   //return ee.Feature(null, {'mean': mean,
                            'date': date})
});

print(ts);

// Export a .csv table of date, mean EVI for flight box
Export.table.toDrive({
  collection: ts,
  description: 'Mean_TERRA_EVI_2018_MOD13Q1_XXXX',
  folder: 'EVI_Means',
  fileFormat: 'CSV'
});


//load the image collection
var modisEVI = ee.ImageCollection('MODIS/006/MYD13Q1') //MYD13Q1.006 AQUA Vegetation Indices 16-Day Global 250m
    .filter(ee.Filter.dayOfYear(0, 365))
    .filterDate('2002-01-01', '2018-12-31')               
    .filterBounds(BLAN_DB);                       
    
var series = ui.Chart.image.doySeriesByYear(
    modisEVI, 'EVI', BLAN_DB, ee.Reducer.mean(), 250);
    
// Display the chart
print(series);

// explicitly calculate the mean, store as a feature collection with no geometry, and export

// get the mean value for the region from each image
var ts = modisEVI.map(function(image){
   var date = image.get('system:time_start');
   var mean = image.reduceRegion({
     reducer: ee.Reducer.mean(),
     geometry: BLAN_DB,
     scale: 250
   });
   // and return a feature with 'null' geometry with properties (dictionary)  
   return ee.Feature(null, {'mean': mean.get('EVI'),
                            'date': date})
});

print(ts);

// Export a .csv table of date, mean EVI for flight box
Export.table.toDrive({
  collection: ts,
  description: 'Mean_AQUA_EVI_2018_MYD13Q1_XXXX',
  folder: 'EVI_Means',
  fileFormat: 'CSV'
});
